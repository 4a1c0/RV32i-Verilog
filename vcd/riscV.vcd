$date
	Mon Jan  6 12:29:29 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module branch_test $end
$scope module TB $end
$scope module top_inst $end
$var wire 10 ! P1core_data_addr [9:0] $end
$var wire 4 " P1core_data_be [3:0] $end
$var wire 1 # P1core_data_req $end
$var wire 32 $ P1core_data_wdata [31:0] $end
$var wire 1 % P1core_data_we $end
$var wire 10 & P1core_prog_addr [9:0] $end
$var wire 1 ' P1core_prog_req $end
$var wire 1 ( P1core_prog_we $end
$var wire 1 ) clk $end
$var wire 1 * core_prog_we $end
$var wire 1 + rst_n $end
$var wire 32 , prog_mem_rdata [31:0] $end
$var wire 1 - data_mem_we $end
$var wire 32 . data_mem_wdata [31:0] $end
$var wire 32 / data_mem_rdata [31:0] $end
$var wire 1 0 data_mem_en $end
$var wire 4 1 data_mem_be [3:0] $end
$var wire 10 2 data_mem_addr [9:0] $end
$var wire 1 3 core_prog_rvalid $end
$var wire 1 4 core_prog_req $end
$var wire 32 5 core_prog_rdata [31:0] $end
$var wire 1 6 core_prog_gnt $end
$var wire 10 7 core_prog_addr [9:0] $end
$var wire 10 8 core_instr_addr [9:0] $end
$var wire 1 9 core_data_we $end
$var wire 32 : core_data_wdata [31:0] $end
$var wire 1 ; core_data_rvalid $end
$var wire 1 < core_data_req $end
$var wire 32 = core_data_rdata [31:0] $end
$var wire 1 > core_data_gnt $end
$var wire 4 ? core_data_be [3:0] $end
$var wire 10 @ core_data_addr [9:0] $end
$var wire 1 A P1core_prog_rvalid $end
$var wire 32 B P1core_prog_rdata [31:0] $end
$var wire 1 C P1core_prog_gnt $end
$var wire 1 D P1core_data_rvalid $end
$var wire 32 E P1core_data_rdata [31:0] $end
$var wire 1 F P1core_data_gnt $end
$scope module core_inst $end
$var wire 1 ) clk $end
$var wire 1 + rst_n $end
$var wire 4 G write_transfer_mem_data_o [3:0] $end
$var wire 1 H we_reg_file $end
$var wire 1 9 we_mem_data_o $end
$var wire 32 I val_mem_prog_i [31:0] $end
$var wire 32 J val_mem_data_write_o [31:0] $end
$var wire 32 K val_mem_data_read_i [31:0] $end
$var wire 1 ; rvalid_mem_data_i $end
$var wire 32 L rs2_reg_file [31:0] $end
$var wire 32 M rs1_reg_file [31:0] $end
$var wire 1 N req_mem_prog_o_intern $end
$var wire 1 O req_mem_data_o_intern $end
$var wire 5 P r_num_write_reg_file [4:0] $end
$var wire 5 Q r2_num_read_reg_file [4:0] $end
$var wire 5 R r1_num_read_reg_file [4:0] $end
$var wire 32 S pc [31:0] $end
$var wire 32 T new_pc [31:0] $end
$var wire 1 U is_stall_t $end
$var wire 1 V is_load_store_t $end
$var wire 1 W is_branch_t $end
$var wire 32 X imm_val_t [31:0] $end
$var wire 1 6 gnt_mem_prog_i $end
$var wire 1 > gnt_mem_data_i $end
$var wire 2 Y data_origin_t [1:0] $end
$var wire 32 Z data_in_reg_file [31:0] $end
$var wire 32 [ csr_val_w [31:0] $end
$var wire 32 \ csr_val_r [31:0] $end
$var wire 3 ] csr_op_t [2:0] $end
$var wire 12 ^ csr_addr_t [11:0] $end
$var wire 10 _ addr_mem_prog_o [9:0] $end
$var wire 10 ` addr_mem_data_o [9:0] $end
$var wire 3 a LIS_op_t [2:0] $end
$var wire 2 b BR_op_t [1:0] $end
$var wire 4 c ALU_op_t [3:0] $end
$var reg 1 < req_mem_data_o $end
$var reg 1 4 req_mem_prog_o $end
$scope module controlUnit_inst $end
$var wire 1 ; mem_rvalid_i $end
$var wire 1 > mem_gnt_i $end
$var wire 32 d instruction [31:0] $end
$var reg 4 e ALU_op [3:0] $end
$var reg 2 f BR_op_o [1:0] $end
$var reg 3 g LIS_op [2:0] $end
$var reg 12 h csr_addr_o [11:0] $end
$var reg 3 i csr_op_o [2:0] $end
$var reg 2 j data_acces [1:0] $end
$var reg 2 k data_origin_o [1:0] $end
$var reg 3 l funct3 [2:0] $end
$var reg 7 m funct7 [6:0] $end
$var reg 12 n imm12 [11:0] $end
$var reg 12 o imm12b [11:0] $end
$var reg 12 p imm12s [11:0] $end
$var reg 20 q imm20 [19:0] $end
$var reg 20 r imm20j [19:0] $end
$var reg 32 s imm_val_o [31:0] $end
$var reg 1 W is_branch_o $end
$var reg 1 V is_load_store $end
$var reg 1 U is_stall_o $end
$var reg 1 O mem_req_o $end
$var reg 1 9 mem_w $end
$var reg 7 t opcode [6:0] $end
$var reg 5 u r1_addr [4:0] $end
$var reg 5 v r2_addr [4:0] $end
$var reg 5 w rd [4:0] $end
$var reg 5 x reg_addr [4:0] $end
$var reg 1 H reg_w $end
$var reg 5 y rs1 [4:0] $end
$var reg 5 z rs2 [4:0] $end
$var reg 4 { write_transfer_o [3:0] $end
$upscope $end
$scope module crs_unit_inst $end
$var wire 1 ) clk $end
$var wire 12 | csr_addr_i [11:0] $end
$var wire 3 } csr_op_i [2:0] $end
$var wire 1 + rst_n $end
$var wire 64 ~ timer_val_i [63:0] $end
$var wire 32 !" csr_val_i [31:0] $end
$var reg 32 "" csr_val_o [31:0] $end
$var reg 64 #" timer_val_o [63:0] $end
$var reg 1 $" timer_we_o $end
$scope module timer_inst $end
$var wire 1 ) clk $end
$var wire 1 + rst_n $end
$var wire 64 %" val_i [63:0] $end
$var wire 1 $" we_i $end
$var reg 64 &" val_o [63:0] $end
$upscope $end
$upscope $end
$scope module exec_unit_inst $end
$var wire 4 '" ALU_op [3:0] $end
$var wire 2 (" BR_op [1:0] $end
$var wire 3 )" LIS_op [2:0] $end
$var wire 3 *" csr_op_i [2:0] $end
$var wire 32 +" csr_val_i [31:0] $end
$var wire 2 ," data_origin_i [1:0] $end
$var wire 32 -" imm_val_i [31:0] $end
$var wire 1 W is_branch_i $end
$var wire 1 V is_loadstore $end
$var wire 1 ." zero_alu_result $end
$var wire 32 /" val_mem_data_write_o [31:0] $end
$var wire 32 0" val_mem_data_read_i [31:0] $end
$var wire 32 1" rs2_i [31:0] $end
$var wire 32 2" rs1_i [31:0] $end
$var wire 32 3" old_pc_i [31:0] $end
$var wire 32 4" new_pc_offset_o [31:0] $end
$var wire 32 5" mem_o [31:0] $end
$var wire 32 6" alu_o [31:0] $end
$var wire 10 7" addr_mem_data_o [9:0] $end
$var reg 32 8" csr_val_o [31:0] $end
$var reg 32 9" d_o [31:0] $end
$var reg 1 :" is_absolute_o $end
$var reg 1 ;" is_conditional $end
$var reg 32 <" s1_ALU [31:0] $end
$var reg 32 =" s2_ALU [31:0] $end
$scope module ALU $end
$var wire 4 >" ALU_op [3:0] $end
$var wire 32 ?" s1 [31:0] $end
$var wire 32 @" s2 [31:0] $end
$var wire 1 ." zero_o $end
$var wire 5 A" shift [4:0] $end
$var reg 32 B" d [31:0] $end
$upscope $end
$scope module BR $end
$var wire 1 ." ALU_zero_i $end
$var wire 2 C" BR_op_i [1:0] $end
$var wire 32 D" alu_d [31:0] $end
$var wire 32 E" imm_i [31:0] $end
$var wire 1 W is_branch_i $end
$var wire 1 ;" is_conditional_i $end
$var wire 32 F" old_pc_i [31:0] $end
$var wire 32 G" new_pc_o [31:0] $end
$var reg 32 H" offset [31:0] $end
$upscope $end
$scope module LIS $end
$var wire 3 I" LIS_op [2:0] $end
$var wire 32 J" addr_mem_i [31:0] $end
$var wire 32 K" val_mem_write_i [31:0] $end
$var wire 32 L" val_mem_read_i [31:0] $end
$var wire 10 M" addr_mem_o [9:0] $end
$var reg 32 N" val_mem_read_o [31:0] $end
$var reg 32 O" val_mem_write_o [31:0] $end
$upscope $end
$upscope $end
$scope module program_counter_inst $end
$var wire 1 ) clk $end
$var wire 1 U is_stall_i $end
$var wire 32 P" new_pc_i [31:0] $end
$var wire 1 + rst_n $end
$var wire 32 Q" new_pc [31:0] $end
$var wire 1 6 gnt_mem_prog_i $end
$var reg 32 R" pc [31:0] $end
$var reg 1 N req_mem_prog_o $end
$upscope $end
$scope module reg_file_inst $end
$var wire 1 ) clk $end
$var wire 32 S" data_in [31:0] $end
$var wire 5 T" r1_num_read [4:0] $end
$var wire 5 U" r2_num_read [4:0] $end
$var wire 5 V" r_num_write [4:0] $end
$var wire 1 + rst_n $end
$var wire 1 H we $end
$var wire 32 W" rs2 [31:0] $end
$var wire 32 X" rs1 [31:0] $end
$scope begin REG $end
$var integer 32 Y" j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module data_ram_mux_i $end
$var wire 1 ) clk $end
$var wire 10 Z" port0_addr_i [9:0] $end
$var wire 4 [" port0_be_i [3:0] $end
$var wire 1 < port0_req_i $end
$var wire 32 \" port0_wdata_i [31:0] $end
$var wire 1 9 port0_we_i $end
$var wire 10 ]" port1_addr_i [9:0] $end
$var wire 4 ^" port1_be_i [3:0] $end
$var wire 1 # port1_req_i $end
$var wire 32 _" port1_wdata_i [31:0] $end
$var wire 1 % port1_we_i $end
$var wire 1 0 ram_en_o $end
$var wire 1 + rst_n $end
$var wire 1 - ram_we_o $end
$var wire 32 `" ram_wdata_o [31:0] $end
$var wire 32 a" ram_rdata_i [31:0] $end
$var wire 4 b" ram_be_o [3:0] $end
$var wire 10 c" ram_addr_o [9:0] $end
$var wire 32 d" port1_rdata_o [31:0] $end
$var wire 4 e" port1_be [3:0] $end
$var wire 32 f" port0_rdata_o [31:0] $end
$var wire 4 g" port0_be [3:0] $end
$var reg 1 > port0_gnt_o $end
$var reg 1 ; port0_rvalid_o $end
$var reg 1 F port1_gnt_o $end
$var reg 1 D port1_rvalid_o $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk6 $end
$upscope $end
$upscope $end
$scope module mem_data_inst $end
$var wire 10 h" addr [9:0] $end
$var wire 1 ) clk $end
$var wire 32 i" data_in [31:0] $end
$var wire 1 + rst_n $end
$var wire 1 - we $end
$var wire 4 j" write_transfer_i [3:0] $end
$var wire 32 k" data_out [31:0] $end
$scope begin MEM_WRITE $end
$var integer 32 l" j [31:0] $end
$upscope $end
$upscope $end
$scope module mem_prog_inst $end
$var wire 1 ) clk $end
$var wire 1 + rst_n $end
$var wire 10 m" addr [9:0] $end
$var reg 32 n" data_out [31:0] $end
$scope begin MEM_READ $end
$var integer 32 o" j [31:0] $end
$upscope $end
$upscope $end
$scope module prog_ram_mux_i $end
$var wire 1 ) clk $end
$var wire 10 p" port0_addr_i [9:0] $end
$var wire 4 q" port0_be_i [3:0] $end
$var wire 1 4 port0_req_i $end
$var wire 32 r" port0_wdata_i [31:0] $end
$var wire 1 * port0_we_i $end
$var wire 10 s" port1_addr_i [9:0] $end
$var wire 4 t" port1_be_i [3:0] $end
$var wire 1 ' port1_req_i $end
$var wire 32 u" port1_wdata_i [31:0] $end
$var wire 1 ( port1_we_i $end
$var wire 1 v" ram_en_o $end
$var wire 32 w" ram_rdata_i [31:0] $end
$var wire 1 + rst_n $end
$var wire 1 x" ram_we_o $end
$var wire 32 y" ram_wdata_o [31:0] $end
$var wire 4 z" ram_be_o [3:0] $end
$var wire 10 {" ram_addr_o [9:0] $end
$var wire 32 |" port1_rdata_o [31:0] $end
$var wire 4 }" port1_be [3:0] $end
$var wire 32 ~" port0_rdata_o [31:0] $end
$var wire 4 !# port0_be [3:0] $end
$var reg 1 6 port0_gnt_o $end
$var reg 1 3 port0_rvalid_o $end
$var reg 1 C port1_gnt_o $end
$var reg 1 A port1_rvalid_o $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk6 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0z !#
bx ~"
b0z }"
bx |"
b0 {"
b0z z"
b0z y"
zx"
bx w"
0v"
b0z u"
b0z t"
b0 s"
b0z r"
b0z q"
b100 p"
b10000000000 o"
bx n"
b0 m"
b100000000 l"
bx k"
bz j"
bz i"
bz h"
b0 g"
bx f"
bz e"
bx d"
bz c"
bz b"
bx a"
bz `"
bz _"
bz ^"
bz ]"
b0 \"
b0 ["
b0 Z"
b100000 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b100 P"
b0 O"
bx N"
b0 M"
bx L"
b0 K"
b0 J"
b0 I"
b0 H"
b100 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
0;"
0:"
b0 9"
b0 8"
b0 7"
b0 6"
bx 5"
b100 4"
b0 3"
b0 2"
b0 1"
bx 0"
b0 /"
1."
b0 -"
b0 ,"
bx +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
0$"
b0 #"
bx ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
bx z
bx y
b0 x
bx w
b0 v
b0 u
bx t
b0 s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
bx d
b0 c
b0 b
b0 a
b0 `
b100 _
b0 ^
b0 ]
bx \
b0 [
b0 Z
b0 Y
b0 X
0W
0V
0U
b100 T
b0 S
b0 R
b0 Q
b0 P
0O
0N
b0 M
b0 L
bx K
b0 J
bx I
0H
b0 G
0F
bx E
0D
0C
bx B
0A
b0 @
b0 ?
0>
bx =
0<
0;
b0 :
09
b0 8
b100 7
06
bx 5
04
03
bz 2
bz 1
00
bx /
bz .
z-
bx ,
0+
z*
0)
z(
0'
b0 &
z%
bz $
0#
bz "
bz !
$end
#50000
0N
b100000000 l"
b10000000000 o"
b100000 Y"
1)
#100000
0)
1+
#150000
1N
b1 ~
b1 &"
0."
b1111111111 @
b1111111111 `
b1111111111 7"
b1111111111 M"
b1111111111 Z"
b11111111111111111111111111111111 Z
b11111111111111111111111111111111 9"
b11111111111111111111111111111111 S"
b11111111111111111111111111111111 6"
b11111111111111111111111111111111 B"
b11111111111111111111111111111111 D"
b11111111111111111111111111111111 J"
b11111 A"
b0 H"
b11111111111111111111111111111111 ="
b11111111111111111111111111111111 @"
b11 P
b11 x
b11 V"
1H
b11111111111111111111111111111111 X
b11111111111111111111111111111111 s
b11111111111111111111111111111111 -"
b11111111111111111111111111111111 E"
b1 Y
b1 k
b1 ,"
b11111 z
b0 y
b111111100011 p
b111111110001 o
b10000000011111111111 r
b11 w
b111111111111 n
b11111111111100000000 q
b0 l
b1111111 m
b10011 t
b11111111111100000000000110010011 5
b11111111111100000000000110010011 I
b11111111111100000000000110010011 d
b11111111111100000000000110010011 ~"
b11111111111100000000000110010011 B
b11111111111100000000000110010011 |"
b11111111111100000000000110010011 ,
b11111111111100000000000110010011 n"
b11111111111100000000000110010011 w"
1)
#200000
0)
#250000
b100 Q"
1v"
16
b100 8
b100 m"
b100 {"
14
b10 ~
b10 &"
1)
#300000
0)
#350000
b1000 8
b1000 m"
b1000 {"
b1000 Q"
b1000 7
b1000 _
b1000 p"
b1000 T
b1000 4"
b1000 G"
b1000 P"
16
b100 S
b100 3"
b100 F"
b100 R"
b11 ~
b11 &"
14
13
b11111111111111111111111111111111 Z
b11111111111111111111111111111111 9"
b11111111111111111111111111111111 S"
b11111111111111111111111111111111 ="
b11111111111111111111111111111111 @"
b111111100100 p
b101111110010 o
b100 w
b100 P
b100 x
b100 V"
b11111111111111111111111111111111 X
b11111111111111111111111111111111 s
b11111111111111111111111111111111 -"
b11111111111111111111111111111111 E"
b1 Y
b1 k
b1 ,"
1H
b11111111111100000000001000010011 5
b11111111111100000000001000010011 I
b11111111111100000000001000010011 d
b11111111111100000000001000010011 ~"
b11111111111100000000001000010011 B
b11111111111100000000001000010011 |"
b11111111111100000000001000010011 ,
b11111111111100000000001000010011 n"
b11111111111100000000001000010011 w"
1)
#400000
0)
#450000
b11111111111111111111111111111000 H"
1."
16
14
b100 ~
b100 &"
b1000 S
b1000 3"
b1000 F"
b1000 R"
b0 8
b0 m"
b0 {"
b0 @
b0 `
b0 7"
b0 M"
b0 Z"
b0 Q"
b0 7
b0 _
b0 p"
b0 6"
b0 B"
b0 D"
b0 J"
b11000 A"
b0 T
b0 4"
b0 G"
b0 P"
1:"
b1000 <"
b1000 ?"
b1000 Z
b1000 9"
b1000 S"
b11111111111111111111111111111000 ="
b11111111111111111111111111111000 @"
1W
b11001 z
b11111 y
b111111100101 p
b111111110010 o
b11111111111111111100 r
b101 w
b111111111001 n
b11111111100111111111 q
b111 l
b1101111 t
b101 P
b101 x
b101 V"
b11111111111111111111111111111000 X
b11111111111111111111111111111000 s
b11111111111111111111111111111000 -"
b11111111111111111111111111111000 E"
b10 Y
b10 k
b10 ,"
1H
b11111111100111111111001011101111 5
b11111111100111111111001011101111 I
b11111111100111111111001011101111 d
b11111111100111111111001011101111 ~"
b11111111100111111111001011101111 B
b11111111100111111111001011101111 |"
b11111111100111111111001011101111 ,
b11111111100111111111001011101111 n"
b11111111100111111111001011101111 w"
1)
#500000
0)
#550000
16
b0 S
b0 3"
b0 F"
b0 R"
b101 ~
b101 &"
14
0."
b1111111111 @
b1111111111 `
b1111111111 7"
b1111111111 M"
b1111111111 Z"
b100 8
b100 m"
b100 {"
b11111 A"
b11111111111111111111111111111111 6"
b11111111111111111111111111111111 B"
b11111111111111111111111111111111 D"
b11111111111111111111111111111111 J"
b100 Q"
b100 7
b100 _
b100 p"
b0 H"
b11111111111111111111111111111111 Z
b11111111111111111111111111111111 9"
b11111111111111111111111111111111 S"
b11111111111111111111111111111111 ="
b11111111111111111111111111111111 @"
b0 <"
b0 ?"
0:"
b100 T
b100 4"
b100 G"
b100 P"
b11111 z
b0 y
b111111100011 p
b111111110001 o
b10000000011111111111 r
b11 w
b111111111111 n
b11111111111100000000 q
b0 l
b10011 t
b11 P
b11 x
b11 V"
b11111111111111111111111111111111 X
b11111111111111111111111111111111 s
b11111111111111111111111111111111 -"
b11111111111111111111111111111111 E"
b1 Y
b1 k
b1 ,"
0W
1H
b11111111111100000000000110010011 5
b11111111111100000000000110010011 I
b11111111111100000000000110010011 d
b11111111111100000000000110010011 ~"
b11111111111100000000000110010011 B
b11111111111100000000000110010011 |"
b11111111111100000000000110010011 ,
b11111111111100000000000110010011 n"
b11111111111100000000000110010011 w"
1)
#600000
b0 Q"
0v"
06
b0 8
b0 m"
b0 {"
03
04
b0 ~
b0 &"
0N
b100000000 l"
b10000000000 o"
b100000 Y"
0)
0+
#650000
0N
b100000000 l"
b10000000000 o"
b100000 Y"
1)
#700000
0)
1+
#750000
b1 ~
b1 &"
1N
1)
#800000
0)
#850000
b100 Q"
1v"
16
b100 8
b100 m"
b100 {"
b10 ~
b10 &"
14
1)
#900000
0)
#950000
b1000 8
b1000 m"
b1000 {"
b1000 Q"
b1000 7
b1000 _
b1000 p"
16
b1000 T
b1000 4"
b1000 G"
b1000 P"
13
14
b11 ~
b11 &"
b100 S
b100 3"
b100 F"
b100 R"
b11111111111111111111111111111111 Z
b11111111111111111111111111111111 9"
b11111111111111111111111111111111 S"
b11111111111111111111111111111111 ="
b11111111111111111111111111111111 @"
b111111100100 p
b101111110010 o
b100 w
b100 P
b100 x
b100 V"
b11111111111111111111111111111111 X
b11111111111111111111111111111111 s
b11111111111111111111111111111111 -"
b11111111111111111111111111111111 E"
b1 Y
b1 k
b1 ,"
1H
b11111111111100000000001000010011 5
b11111111111100000000001000010011 I
b11111111111100000000001000010011 d
b11111111111100000000001000010011 ~"
b11111111111100000000001000010011 B
b11111111111100000000001000010011 |"
b11111111111100000000001000010011 ,
b11111111111100000000001000010011 n"
b11111111111100000000001000010011 w"
1)
#1000000
0)
#1050000
bx 5"
bx N"
b11111111111111111111111111111111 L
b11111111111111111111111111111111 1"
b11111111111111111111111111111111 K"
b11111111111111111111111111111111 W"
16
b1000 S
b1000 3"
b1000 F"
b1000 R"
b100 ~
b100 &"
14
b11110000 H"
b11111000 8
b11111000 m"
b11111000 {"
1."
b0 @
b0 `
b0 7"
b0 M"
b0 Z"
b11111111111111111111111111111111 <"
b11111111111111111111111111111111 ?"
b11111000 Q"
b11111000 7
b11111000 _
b11111000 p"
b11111 A"
b0 6"
b0 B"
b0 D"
b0 J"
b11111111111111111111111111111111 M
b11111111111111111111111111111111 2"
b11111111111111111111111111111111 X"
b11111000 T
b11111000 4"
b11111000 G"
b11111000 P"
1;"
b1000 Z
b1000 9"
b1000 S"
b11111111111111111111111111111111 ="
b11111111111111111111111111111111 @"
b1 c
b1 e
b1 '"
b1 >"
b100 Q
b100 v
b100 U"
b11 R
b11 u
b11 T"
1W
b100 z
b11 y
b11110000 p
b1111000 o
b1100000001110010 r
b10000 w
b11100100 n
b1110010000011000 q
b111 m
b1100011 t
b0 P
b0 x
b0 V"
b11110000 X
b11110000 s
b11110000 -"
b11110000 E"
b0 Y
b0 k
b0 ,"
0H
b1110010000011000100001100011 5
b1110010000011000100001100011 I
b1110010000011000100001100011 d
b1110010000011000100001100011 ~"
b1110010000011000100001100011 B
b1110010000011000100001100011 |"
b1110010000011000100001100011 ,
b1110010000011000100001100011 n"
b1110010000011000100001100011 w"
1)
#1100000
0)
#1150000
16
14
b101 ~
b101 &"
b11111000 S
b11111000 3"
b11111000 F"
b11111000 R"
b0 A"
b11111100 8
b11111100 m"
b11111100 {"
bx 5"
bx N"
1."
b0 @
b0 `
b0 7"
b0 M"
b0 Z"
b11111100 Q"
b11111100 7
b11111100 _
b11111100 p"
b0 L
b0 1"
b0 K"
b0 W"
b0 M
b0 2"
b0 X"
b0 H"
b0 6"
b0 B"
b0 D"
b0 J"
b0 Z
b0 9"
b0 S"
b0 ="
b0 @"
b0 <"
b0 ?"
0;"
b11111100 T
b11111100 4"
b11111100 G"
b11111100 P"
b0 z
b0 y
b0 p
b0 o
b0 r
b0 w
b0 n
b0 q
b0 m
b0 t
b0 Q
b0 v
b0 U"
b0 R
b0 u
b0 T"
b0 X
b0 s
b0 -"
b0 E"
b0 c
b0 e
b0 '"
b0 >"
0W
b0 5
b0 I
b0 d
b0 ~"
b0 B
b0 |"
b0 ,
b0 n"
b0 w"
1)
#1200000
b0 Q"
b100 7
b100 _
b100 p"
b100 T
b100 4"
b100 G"
b100 P"
0v"
06
b0 8
b0 m"
b0 {"
0N
b0 S
b0 3"
b0 F"
b0 R"
b0 ~
b0 &"
04
03
b100000000 l"
b10000000000 o"
b100000 Y"
0)
0+
#1250000
0N
b100000000 l"
b10000000000 o"
b100000 Y"
1)
#1300000
0)
