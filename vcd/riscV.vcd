$date
	Fri Oct 25 16:52:14 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module load_store_test $end
$scope module TB $end
$scope module top_inst $end
$var wire 1 ! clk $end
$var wire 1 " rst_n $end
$var wire 4 # write_transfer [3:0] $end
$var wire 1 $ we_mem_data $end
$var wire 32 % val_mem_prog [31:0] $end
$var wire 32 & val_mem_data_write [31:0] $end
$var wire 32 ' val_mem_data_read [31:0] $end
$var wire 10 ( addr_mem_prog [9:0] $end
$var wire 10 ) addr_mem_data [9:0] $end
$scope module core_inst $end
$var wire 1 ! clk $end
$var wire 1 " rst_n $end
$var wire 4 * write_transfer_mem_data_o [3:0] $end
$var wire 1 + we_reg_file $end
$var wire 1 $ we_mem_data_o $end
$var wire 32 , val_mem_prog_i [31:0] $end
$var wire 32 - val_mem_data_write_o [31:0] $end
$var wire 32 . val_mem_data_read_i [31:0] $end
$var wire 32 / rs2_reg_file [31:0] $end
$var wire 32 0 rs1_reg_file [31:0] $end
$var wire 5 1 r_num_write_reg_file [4:0] $end
$var wire 5 2 r2_num_read_reg_file [4:0] $end
$var wire 5 3 r1_num_read_reg_file [4:0] $end
$var wire 32 4 new_pc [31:0] $end
$var wire 1 5 is_load_store_t $end
$var wire 1 6 is_branch_t $end
$var wire 1 7 is_absolute_t $end
$var wire 32 8 imm_val_t [31:0] $end
$var wire 2 9 data_origin_t [1:0] $end
$var wire 32 : data_in_reg_file [31:0] $end
$var wire 10 ; addr_mem_prog_o [9:0] $end
$var wire 10 < addr_mem_data_o [9:0] $end
$var wire 3 = LIS_op_t [2:0] $end
$var wire 2 > BR_op_t [1:0] $end
$var wire 4 ? ALU_op_t [3:0] $end
$scope module controlUnit_inst $end
$var wire 32 @ instruction [31:0] $end
$var reg 4 A ALU_op [3:0] $end
$var reg 2 B BR_op_o [1:0] $end
$var reg 3 C LIS_op [2:0] $end
$var reg 2 D data_origin_o [1:0] $end
$var reg 3 E funct3 [2:0] $end
$var reg 7 F funct7 [6:0] $end
$var reg 12 G imm12 [11:0] $end
$var reg 12 H imm12b [11:0] $end
$var reg 12 I imm12s [11:0] $end
$var reg 20 J imm20 [19:0] $end
$var reg 20 K imm20j [19:0] $end
$var reg 32 L imm_val_o [31:0] $end
$var reg 1 6 is_branch_o $end
$var reg 1 5 is_load_store $end
$var reg 1 $ mem_w $end
$var reg 7 M opcode [6:0] $end
$var reg 5 N r1_addr [4:0] $end
$var reg 5 O r2_addr [4:0] $end
$var reg 5 P rd [4:0] $end
$var reg 5 Q reg_addr [4:0] $end
$var reg 1 + reg_w $end
$var reg 5 R rs1 [4:0] $end
$var reg 5 S rs2 [4:0] $end
$var reg 4 T write_transfer_o [3:0] $end
$upscope $end
$scope module exec_unit_inst $end
$var wire 4 U ALU_op [3:0] $end
$var wire 2 V BR_op [1:0] $end
$var wire 3 W LIS_op [2:0] $end
$var wire 2 X data_origin_i [1:0] $end
$var wire 32 Y imm_val_i [31:0] $end
$var wire 1 6 is_branch_i $end
$var wire 1 5 is_loadstore $end
$var wire 1 Z zero_alu_result $end
$var wire 32 [ val_mem_data_write_o [31:0] $end
$var wire 32 \ val_mem_data_read_i [31:0] $end
$var wire 32 ] rs2_i [31:0] $end
$var wire 32 ^ rs1_i [31:0] $end
$var wire 10 _ old_pc_i [9:0] $end
$var wire 32 ` new_pc_offset_o [31:0] $end
$var wire 32 a mem_o [31:0] $end
$var wire 32 b alu_o [31:0] $end
$var wire 10 c addr_mem_data_o [9:0] $end
$var reg 32 d d_o [31:0] $end
$var reg 1 7 is_absolute_o $end
$var reg 1 e is_conditional $end
$var reg 32 f s1_ALU [31:0] $end
$var reg 32 g s2_ALU [31:0] $end
$scope module ALU $end
$var wire 4 h ALU_op [3:0] $end
$var wire 32 i s1 [31:0] $end
$var wire 32 j s2 [31:0] $end
$var wire 1 Z zero_o $end
$var wire 5 k shift [4:0] $end
$var reg 32 l d [31:0] $end
$upscope $end
$scope module BR $end
$var wire 1 Z ALU_zero_i $end
$var wire 2 m BR_op_i [1:0] $end
$var wire 32 n alu_d [31:0] $end
$var wire 1 e is_conditional_i $end
$var wire 32 o new_pc_i [31:0] $end
$var wire 32 p old_pc_i [31:0] $end
$var wire 32 q new_pc_o [31:0] $end
$var reg 32 r offset [31:0] $end
$upscope $end
$scope module LIS $end
$var wire 3 s LIS_op [2:0] $end
$var wire 32 t addr_mem_i [31:0] $end
$var wire 32 u val_mem_write_i [31:0] $end
$var wire 32 v val_mem_read_i [31:0] $end
$var wire 10 w addr_mem_o [9:0] $end
$var reg 32 x val_mem_read_o [31:0] $end
$var reg 32 y val_mem_write_o [31:0] $end
$upscope $end
$upscope $end
$scope module program_counter_inst $end
$var wire 1 ! clk $end
$var wire 1 7 is_absolute_i $end
$var wire 1 6 is_branch_i $end
$var wire 10 z offset_i [9:0] $end
$var wire 1 " rst_n $end
$var wire 10 { offset [9:0] $end
$var reg 10 | addr [9:0] $end
$upscope $end
$scope module reg_file_inst $end
$var wire 1 ! clk $end
$var wire 32 } data_in [31:0] $end
$var wire 5 ~ r1_num_read [4:0] $end
$var wire 5 !" r2_num_read [4:0] $end
$var wire 5 "" r_num_write [4:0] $end
$var wire 1 " rst_n $end
$var wire 1 + we $end
$var wire 32 #" rs2 [31:0] $end
$var wire 32 $" rs1 [31:0] $end
$scope begin REG $end
$var integer 32 %" j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem_data_inst $end
$var wire 10 &" addr [9:0] $end
$var wire 1 ! clk $end
$var wire 32 '" data_in [31:0] $end
$var wire 1 " rst_n $end
$var wire 1 $ we $end
$var wire 4 (" write_transfer_i [3:0] $end
$var wire 32 )" data_out [31:0] $end
$scope begin MEM_WRITE $end
$var integer 32 *" j [31:0] $end
$upscope $end
$upscope $end
$scope module mem_prog_inst $end
$var wire 10 +" addr [9:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst_n $end
$var reg 32 ," data_out [31:0] $end
$scope begin MEM_READ $end
$var integer 32 -" j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000 -"
bx ,"
b0 +"
b10000000000 *"
bx )"
bx ("
bx '"
bx &"
b100000 %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
b0 |
b100 {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
b0 p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
0e
bx d
bx c
bx b
bx a
bx `
b0 _
bx ^
bx ]
bx \
bx [
xZ
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
b0 ;
bx :
bx 9
bx 8
07
x6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
bx *
bx )
b0 (
bx '
bx &
bx %
x$
bx #
0"
0!
$end
#50000
b10000000000 -"
b10000000000 *"
b100000 %"
1!
#100000
0!
1"
#150000
b100 p
b100 (
b100 ;
b100 _
b100 |
b100 +"
b1111 :
b1111 d
b1111 }
b1111 a
b1111 x
b11110000010010100001110000001111 '
b11110000010010100001110000001111 .
b11110000010010100001110000001111 \
b11110000010010100001110000001111 v
b11110000010010100001110000001111 )"
0Z
b100 z
b100 4
b100 `
b100 q
b100 )
b100 <
b100 c
b100 w
b100 &"
b100 b
b100 l
b100 n
b100 t
b0 f
b0 i
b100 k
b0 /
b0 ]
b0 u
b0 #"
b0 0
b0 ^
b0 $"
b100 r
b100 g
b100 j
b100 S
b0 R
b11 I
b10000000001 H
b10 K
b11 P
b100 G
b10000000000 J
b0 E
b0 F
b11 M
b0 2
b0 O
b0 !"
b0 3
b0 N
b0 ~
b11 1
b11 Q
b11 ""
b100 8
b100 L
b100 Y
b100 o
b0 =
b0 C
b0 W
b0 s
b0 >
b0 B
b0 V
b0 m
b0 ?
b0 A
b0 U
b0 h
b1 9
b1 D
b1 X
06
1+
15
b0 #
b0 *
b0 T
b0 ("
0$
b10000000000000110000011 %
b10000000000000110000011 ,
b10000000000000110000011 @
b10000000000000110000011 ,"
1!
#200000
0!
#250000
b1000 p
b1000 (
b1000 ;
b1000 _
b1000 |
b1000 +"
b1110000001111 :
b1110000001111 d
b1110000001111 }
b1110000001111 a
b1110000001111 x
b1 =
b1 C
b1 W
b1 s
b100 I
b10 H
b100000000010 K
b100 P
b10000000001 J
b1 E
b100 1
b100 Q
b100 ""
b100 8
b100 L
b100 Y
b100 o
b1 9
b1 D
b1 X
1+
15
b10000000001001000000011 %
b10000000001001000000011 ,
b10000000001001000000011 @
b10000000001001000000011 ,"
1!
#300000
0!
#350000
b1100 p
b1100 (
b1100 ;
b1100 _
b1100 |
b1100 +"
b11110000010010100001110000001111 :
b11110000010010100001110000001111 d
b11110000010010100001110000001111 }
b11110000010010100001110000001111 a
b11110000010010100001110000001111 x
b101 I
b10000000010 H
b1000000000010 K
b101 P
b10000000010 J
b10 E
b101 1
b101 Q
b101 ""
b100 8
b100 L
b100 Y
b100 o
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
1+
15
b10000000010001010000011 %
b10000000010001010000011 ,
b10000000010001010000011 @
b10000000010001010000011 ,"
1!
#400000
0!
#450000
b10000 p
b10000 (
b10000 ;
b10000 _
b10000 |
b10000 +"
b1110000001111 :
b1110000001111 d
b1110000001111 }
b1110000001111 a
b1110000001111 x
b110 I
b11 H
b10100000000010 K
b110 P
b10000000101 J
b101 E
b110 1
b110 Q
b110 ""
b100 8
b100 L
b100 Y
b100 o
b100 =
b100 C
b100 W
b100 s
b1 9
b1 D
b1 X
1+
15
b10000000101001100000011 %
b10000000101001100000011 ,
b10000000101001100000011 @
b10000000101001100000011 ,"
1!
#500000
0!
#550000
b10100 p
b10100 (
b10100 ;
b10100 _
b10100 |
b10100 +"
b1111 :
b1111 d
b1111 }
b1111 a
b1111 x
b111 I
b10000000011 H
b10000000000010 K
b111 P
b10000000100 J
b100 E
b111 1
b111 Q
b111 ""
b100 8
b100 L
b100 Y
b100 o
b11 =
b11 C
b11 W
b11 s
b1 9
b1 D
b1 X
1+
15
b10000000100001110000011 %
b10000000100001110000011 ,
b10000000100001110000011 @
b10000000100001110000011 ,"
1!
#600000
0!
#650000
b11000 p
b11000 (
b11000 ;
b11000 _
b11000 |
b11000 +"
b10000 a
b10000 x
b0 r
b10000000100000001000000010000 '
b10000000100000001000000010000 .
b10000000100000001000000010000 \
b10000000100000001000000010000 v
b10000000100000001000000010000 )"
1Z
b0 z
b0 4
b0 `
b0 q
b0 )
b0 <
b0 c
b0 w
b0 &"
b0 b
b0 l
b0 n
b0 t
b0 k
b0 :
b0 d
b0 }
b0 g
b0 j
b0 S
b0 I
b0 H
b0 K
b0 P
b0 G
b0 J
b0 E
b0 M
b0 1
b0 Q
b0 ""
b0 8
b0 L
b0 Y
b0 o
b0 =
b0 C
b0 W
b0 s
b0 9
b0 D
b0 X
0+
05
b0 %
b0 ,
b0 @
b0 ,"
1!
#700000
b0 a
b0 x
b0 '
b0 .
b0 \
b0 v
b0 )"
b0 p
b0 (
b0 ;
b0 _
b0 |
b0 +"
b10000000000 -"
b10000000000 *"
b100000 %"
0!
0"
#750000
b10000000000 -"
b10000000000 *"
b100000 %"
1!
#800000
b10000 a
b10000 x
b10000000100000001000000010000 '
b10000000100000001000000010000 .
b10000000100000001000000010000 \
b10000000100000001000000010000 v
b10000000100000001000000010000 )"
0!
1"
#850000
b100 p
b100 (
b100 ;
b100 _
b100 |
b100 +"
b10000000100000001000000010000 a
b10000000100000001000000010000 x
b10000000100000001000000010000 :
b10000000100000001000000010000 d
b10000000100000001000000010000 }
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
b1 1
b1 Q
b1 ""
1+
15
b1 I
b10000000000 H
b1000000000000 K
b1 P
b10 J
b10 E
b11 M
b10000010000011 %
b10000010000011 ,
b10000010000011 @
b10000010000011 ,"
1!
#900000
0!
#950000
b1000 p
b1000 (
b1000 ;
b1000 _
b1000 |
b1000 +"
b11110000010010100001110000001111 :
b11110000010010100001110000001111 d
b11110000010010100001110000001111 }
b11110000010010100001110000001111 a
b11110000010010100001110000001111 x
b11110000010010100001110000001111 '
b11110000010010100001110000001111 .
b11110000010010100001110000001111 \
b11110000010010100001110000001111 v
b11110000010010100001110000001111 )"
0Z
b100 z
b100 4
b100 `
b100 q
b100 )
b100 <
b100 c
b100 w
b100 &"
b100 b
b100 l
b100 n
b100 t
b100 k
b100 r
b100 g
b100 j
b100 8
b100 L
b100 Y
b100 o
b100 S
b10 I
b1 H
b1000000000010 K
b10 P
b100 G
b10000000010 J
b10 1
b10 Q
b10 ""
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
1+
15
b10000000010000100000011 %
b10000000010000100000011 ,
b10000000010000100000011 @
b10000000010000100000011 ,"
1!
#1000000
0!
#1050000
b1100 p
b1100 (
b1100 ;
b1100 _
b1100 |
b1100 +"
b10001000100010001000100010001 :
b10001000100010001000100010001 d
b10001000100010001000100010001 }
b10001000100010001000100010001 a
b10001000100010001000100010001 x
b10001000100010001000100010001 '
b10001000100010001000100010001 .
b10001000100010001000100010001 \
b10001000100010001000100010001 v
b10001000100010001000100010001 )"
b1000 z
b1000 4
b1000 `
b1000 q
b1000 )
b1000 <
b1000 c
b1000 w
b1000 &"
b1000 b
b1000 l
b1000 n
b1000 t
b1000 k
b1000 g
b1000 j
b1000 S
b11 I
b10000000001 H
b1000000000100 K
b11 P
b1000 G
b100000000010 J
b11 1
b11 Q
b11 ""
b1000 8
b1000 L
b1000 Y
b1000 o
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
1+
15
b100000000010000110000011 %
b100000000010000110000011 ,
b100000000010000110000011 @
b100000000010000110000011 ,"
1!
#1100000
0!
#1150000
b10000 p
b10000 (
b10000 ;
b10000 _
b10000 |
b10000 +"
b11111111111111111111111111111111 :
b11111111111111111111111111111111 d
b11111111111111111111111111111111 }
b11111111111111111111111111111111 a
b11111111111111111111111111111111 x
b11111111111111111111111111111111 '
b11111111111111111111111111111111 .
b11111111111111111111111111111111 \
b11111111111111111111111111111111 v
b11111111111111111111111111111111 )"
b1100 z
b1100 4
b1100 `
b1100 q
b1100 )
b1100 <
b1100 c
b1100 w
b1100 &"
b1100 b
b1100 l
b1100 n
b1100 t
b1100 k
b1100 g
b1100 j
b1100 S
b100 I
b10 H
b1000000000110 K
b100 P
b1100 G
b110000000010 J
b100 1
b100 Q
b100 ""
b1100 8
b1100 L
b1100 Y
b1100 o
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
1+
15
b110000000010001000000011 %
b110000000010001000000011 ,
b110000000010001000000011 @
b110000000010001000000011 ,"
1!
#1200000
0!
#1250000
b10100 p
b10100 (
b10100 ;
b10100 _
b10100 |
b10100 +"
b10000 z
b10000 4
b10000 `
b10000 q
b10000 )
b10000 <
b10000 c
b10000 w
b10000 &"
b0 '
b0 .
b0 \
b0 v
b0 )"
b10000 b
b10000 l
b10000 n
b10000 t
b10000 k
b10000000100000001000000010000 /
b10000000100000001000000010000 ]
b10000000100000001000000010000 u
b10000000100000001000000010000 #"
b10000000100000001000000010000 &
b10000000100000001000000010000 -
b10000000100000001000000010000 [
b10000000100000001000000010000 y
b10000000100000001000000010000 '"
b10000 g
b10000 j
b1111 #
b1111 *
b1111 T
b1111 ("
1$
b1 2
b1 O
b1 !"
b1 S
b10000 I
b1000 H
b1010000000000 K
b10000 P
b1 G
b100000010 J
b100011 M
b0 1
b0 Q
b0 ""
b10000 8
b10000 L
b10000 Y
b10000 o
b111 =
b111 C
b111 W
b111 s
b1 9
b1 D
b1 X
0+
15
b100000010100000100011 %
b100000010100000100011 ,
b100000010100000100011 @
b100000010100000100011 ,"
1!
#1300000
0!
#1350000
b11000 p
b11000 (
b11000 ;
b11000 _
b11000 |
b11000 +"
b10100 z
b10100 4
b10100 `
b10100 q
b10100 )
b10100 <
b10100 c
b10100 w
b10100 &"
b10100 b
b10100 l
b10100 n
b10100 t
b10100 k
b11110000010010100001110000001111 /
b11110000010010100001110000001111 ]
b11110000010010100001110000001111 u
b11110000010010100001110000001111 #"
b1110000001111 &
b1110000001111 -
b1110000001111 [
b1110000001111 y
b1110000001111 '"
b10100 g
b10100 j
b10 S
b10100 I
b1010 H
b100000000001 K
b10100 P
b10 G
b1000000001 J
b1 E
b10 2
b10 O
b10 !"
b10100 8
b10100 L
b10100 Y
b10100 o
b110 =
b110 C
b110 W
b110 s
b1 9
b1 D
b1 X
15
b11 #
b11 *
b11 T
b11 ("
1$
b1000000001101000100011 %
b1000000001101000100011 ,
b1000000001101000100011 @
b1000000001101000100011 ,"
1!
#1400000
0!
#1450000
b11100 p
b11100 (
b11100 ;
b11100 _
b11100 |
b11100 +"
b11000 z
b11000 4
b11000 `
b11000 q
b11000 )
b11000 <
b11000 c
b11000 w
b11000 &"
b11000 b
b11000 l
b11000 n
b11000 t
b11000 k
b10001000100010001000100010001 /
b10001000100010001000100010001 ]
b10001000100010001000100010001 u
b10001000100010001000100010001 #"
b10001 &
b10001 -
b10001 [
b10001 y
b10001 '"
b11000 g
b11000 j
b11 S
b11000 I
b1100 H
b10000000001 K
b11000 P
b11 G
b1100000000 J
b0 E
b11 2
b11 O
b11 !"
b11000 8
b11000 L
b11000 Y
b11000 o
b101 =
b101 C
b101 W
b101 s
b1 9
b1 D
b1 X
15
b1 #
b1 *
b1 T
b1 ("
1$
b1100000000110000100011 %
b1100000000110000100011 ,
b1100000000110000100011 @
b1100000000110000100011 ,"
1!
#1500000
0!
#1550000
b100000 p
b100000 (
b100000 ;
b100000 _
b100000 |
b100000 +"
b11100 z
b11100 4
b11100 `
b11100 q
b11100 )
b11100 <
b11100 c
b11100 w
b11100 &"
b11100 b
b11100 l
b11100 n
b11100 t
b11100 k
b11111111111111111111111111111111 /
b11111111111111111111111111111111 ]
b11111111111111111111111111111111 u
b11111111111111111111111111111111 #"
b11111111111111111111111111111111 &
b11111111111111111111111111111111 -
b11111111111111111111111111111111 [
b11111111111111111111111111111111 y
b11111111111111111111111111111111 '"
b11100 g
b11100 j
b100 S
b11100 I
b1110 H
b1000000000010 K
b11100 P
b100 G
b10000000010 J
b10 E
b100 2
b100 O
b100 !"
b11100 8
b11100 L
b11100 Y
b11100 o
b111 =
b111 C
b111 W
b111 s
b1 9
b1 D
b1 X
15
b1111 #
b1111 *
b1111 T
b1111 ("
1$
b10000000010111000100011 %
b10000000010111000100011 ,
b10000000010111000100011 @
b10000000010111000100011 ,"
1!
#1600000
0!
#1650000
b100100 p
b100100 (
b100100 ;
b100100 _
b100100 |
b100100 +"
b10000000100000001000000010000 '
b10000000100000001000000010000 .
b10000000100000001000000010000 \
b10000000100000001000000010000 v
b10000000100000001000000010000 )"
b10000 z
b10000 4
b10000 `
b10000 q
b10000 )
b10000 <
b10000 c
b10000 w
b10000 &"
b10000000100000001000000010000 :
b10000000100000001000000010000 d
b10000000100000001000000010000 }
b10000 b
b10000 l
b10000 n
b10000 t
b10000 k
b0 /
b0 ]
b0 u
b0 #"
b10000000100000001000000010000 a
b10000000100000001000000010000 x
b10000 g
b10000 j
b101 1
b101 Q
b101 ""
1+
b10000 S
b101 I
b10000000010 H
b1000000001000 K
b101 P
b10000 G
b1000000000010 J
b11 M
b0 2
b0 O
b0 !"
b10000 8
b10000 L
b10000 Y
b10000 o
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
15
b0 #
b0 *
b0 T
b0 ("
0$
b1000000000010001010000011 %
b1000000000010001010000011 ,
b1000000000010001010000011 @
b1000000000010001010000011 ,"
1!
#1700000
0!
#1750000
b101000 p
b101000 (
b101000 ;
b101000 _
b101000 |
b101000 +"
b1110000001111 :
b1110000001111 d
b1110000001111 }
b1110000001111 a
b1110000001111 x
b1110000001111 '
b1110000001111 .
b1110000001111 \
b1110000001111 v
b1110000001111 )"
b10100 z
b10100 4
b10100 `
b10100 q
b10100 )
b10100 <
b10100 c
b10100 w
b10100 &"
b10100 b
b10100 l
b10100 n
b10100 t
b10100 k
b10100 g
b10100 j
b10100 S
b110 I
b11 H
b1000000001010 K
b110 P
b10100 G
b1010000000010 J
b110 1
b110 Q
b110 ""
b10100 8
b10100 L
b10100 Y
b10100 o
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
1+
15
b1010000000010001100000011 %
b1010000000010001100000011 ,
b1010000000010001100000011 @
b1010000000010001100000011 ,"
1!
#1800000
0!
#1850000
b101100 p
b101100 (
b101100 ;
b101100 _
b101100 |
b101100 +"
b10001 :
b10001 d
b10001 }
b10001 a
b10001 x
b10001 '
b10001 .
b10001 \
b10001 v
b10001 )"
b11000 z
b11000 4
b11000 `
b11000 q
b11000 )
b11000 <
b11000 c
b11000 w
b11000 &"
b11000 b
b11000 l
b11000 n
b11000 t
b11000 k
b11000 g
b11000 j
b11000 S
b111 I
b10000000011 H
b1000000001100 K
b111 P
b11000 G
b1100000000010 J
b111 1
b111 Q
b111 ""
b11000 8
b11000 L
b11000 Y
b11000 o
b10 =
b10 C
b10 W
b10 s
b1 9
b1 D
b1 X
1+
15
b1100000000010001110000011 %
b1100000000010001110000011 ,
b1100000000010001110000011 @
b1100000000010001110000011 ,"
1!
#1900000
0!
#1950000
b110000 p
b110000 (
b110000 ;
b110000 _
b110000 |
b110000 +"
b10000 a
b10000 x
b0 r
b10000000100000001000000010000 '
b10000000100000001000000010000 .
b10000000100000001000000010000 \
b10000000100000001000000010000 v
b10000000100000001000000010000 )"
1Z
b0 z
b0 4
b0 `
b0 q
b0 )
b0 <
b0 c
b0 w
b0 &"
b0 b
b0 l
b0 n
b0 t
b0 k
b0 :
b0 d
b0 }
b0 g
b0 j
b0 S
b0 I
b0 H
b0 K
b0 P
b0 G
b0 J
b0 E
b0 M
b0 1
b0 Q
b0 ""
b0 8
b0 L
b0 Y
b0 o
b0 =
b0 C
b0 W
b0 s
b0 9
b0 D
b0 X
0+
05
b0 %
b0 ,
b0 @
b0 ,"
1!
#2000000
0!
